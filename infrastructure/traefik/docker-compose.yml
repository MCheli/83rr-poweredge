services:
  traefik:
    image: traefik:v3.0
    container_name: traefik
    restart: unless-stopped
    # ── Ports ────────────────────────────────────────────────────────────────
    ports:
      - "80:80"                        # Public port for Let's Encrypt challenges
      - "443:443"                      # Public port for your apps
      - "25565:25565"                  # Minecraft server port
      - "192.168.1.179:8080:8080"     # HTTP dashboard (local only)
      - "192.168.1.179:8443:443"      # HTTPS dashboard (local only, reusing port 443 internally)
    # ── Volumes ──────────────────────────────────────────────────────────────
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "/home/mcheli/letsencrypt:/letsencrypt"
      - "/home/mcheli/traefik/dynamic:/etc/traefik/dynamic:ro"
      - "/home/mcheli/traefik/certs:/etc/traefik/certs:ro"
    # ── Traefik flags ───────────────────────────────────────────────────────
    command:
      # Providers
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.file.directory=/etc/traefik/dynamic"
      - "--providers.file.watch=true"
      # Entrypoints
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.minecraft.address=:25565"        # Minecraft TCP port
      - "--entrypoints.dashboard.address=:8080"         # HTTP dashboard
      # HTTP-01 resolver for single domain certificates (fallback only)
      - "--certificatesresolvers.letsencrypt-http.acme.email=mpcheli7@gmail.com"
      - "--certificatesresolvers.letsencrypt-http.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt-http.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.letsencrypt-http.acme.storage=/letsencrypt/acme-http.json"
      # Dashboard / API
      - "--api.dashboard=true"
      - "--api=true"
      # Logs
      - "--log.level=INFO"
    # ── Labels for dashboard with auth ──────────────────────────────────────
    labels:
      - "traefik.enable=true"
      
      # Dashboard router for HTTP (local access on port 8080)
      - "traefik.http.routers.dashboard.rule=PathPrefix(`/api`) || PathPrefix(`/dashboard`)"
      - "traefik.http.routers.dashboard.entrypoints=dashboard"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.middlewares=dashboard-auth"
      
      # Dashboard router for HTTPS with real certificate
      # CHANGE traefik-local.markcheli.com to your preferred subdomain
      - "traefik.http.routers.dashboard-secure.rule=Host(`traefik-local.ops.markcheli.com`) && (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"
      - "traefik.http.routers.dashboard-secure.entrypoints=websecure"
      - "traefik.http.routers.dashboard-secure.service=api@internal"
      - "traefik.http.routers.dashboard-secure.middlewares=dashboard-auth,lan-only"  # LAN-only for extra security
      - "traefik.http.routers.dashboard-secure.tls=true"
      - "traefik.http.routers.dashboard-secure.tls=true"
      
      # Redirect root to dashboard
      - "traefik.http.routers.dashboard-root.rule=Host(`traefik-local.ops.markcheli.com`) && Path(`/`)"
      - "traefik.http.routers.dashboard-root.entrypoints=websecure"
      - "traefik.http.routers.dashboard-root.middlewares=dashboard-root-redirect,lan-only"
      - "traefik.http.routers.dashboard-root.tls=true"
      - "traefik.http.routers.dashboard-root.tls=true"
      - "traefik.http.middlewares.dashboard-root-redirect.redirectregex.regex=^https://(.*)/$"
      - "traefik.http.middlewares.dashboard-root-redirect.redirectregex.replacement=https://$${1}/dashboard/"
      
      # Basic auth middleware ($ must be escaped as $$ in YAML)
      - "traefik.http.middlewares.dashboard-auth.basicauth.users=aadmin:$$apr1$$7Y5GpTrH$$6zC9TR4Q3PsfoJH7bwMe2/"
      
      # LAN-only middleware - CRITICAL for security
      - "traefik.http.middlewares.lan-only.ipallowlist.sourcerange=192.168.1.0/24,10.0.0.0/8,172.16.0.0/12"
      
      # Global HTTP → HTTPS redirect (catch-all) for public services
      - "traefik.http.routers.http-catchall.rule=HostRegexp(`{any:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      
      # Security headers middleware (for your apps)
      - "traefik.http.middlewares.secure-headers.headers.stsSeconds=31536000"
      - "traefik.http.middlewares.secure-headers.headers.stsIncludeSubdomains=true"
      - "traefik.http.middlewares.secure-headers.headers.stsPreload=true"
      - "traefik.http.middlewares.secure-headers.headers.contentTypeNosniff=true"
      - "traefik.http.middlewares.secure-headers.headers.browserXssFilter=true"
      - "traefik.http.middlewares.secure-headers.headers.frameDeny=true"

  whoami:
    image: traefik/whoami
    container_name: whoami
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      # Public HTTPS router for testing
      - "traefik.http.routers.whoami.rule=Host(`ops.markcheli.com`)"
      - "traefik.http.routers.whoami.entrypoints=websecure"
      - "traefik.http.routers.whoami.tls=true"
      # Attach the security headers middleware defined on Traefik
      - "traefik.http.routers.whoami.middlewares=secure-headers@docker"

networks:
  traefik_default:
    external: true