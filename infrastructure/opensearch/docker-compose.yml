services:
  opensearch:
    image: opensearchproject/opensearch:2.11.1
    container_name: opensearch
    restart: unless-stopped
    environment:
      - cluster.name=opensearch-cluster
      - node.name=opensearch
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "OPENSEARCH_JAVA_OPTS=-Xms1g -Xmx1g"
      - "DISABLE_INSTALL_DEMO_CONFIG=true"
      - "DISABLE_SECURITY_PLUGIN=true"  # Disable security for simplicity
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - opensearch_data:/usr/share/opensearch/data
    networks:
      - opensearch_net
      - traefik_default
    labels:
      - "traefik.enable=true"
      # Internal access only (no public exposure)
      - "traefik.http.routers.opensearch.rule=Host(`opensearch-local.ops.markcheli.com`)"
      - "traefik.http.routers.opensearch.entrypoints=websecure"
      - "traefik.http.routers.opensearch.tls=true"
      - "traefik.http.routers.opensearch.tls=true"
      - "traefik.http.routers.opensearch.middlewares=lan-only@docker"
      - "traefik.http.services.opensearch.loadbalancer.server.port=9200"

  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:2.11.1
    container_name: opensearch-dashboards
    restart: unless-stopped
    environment:
      - 'OPENSEARCH_HOSTS=["http://opensearch:9200"]'
      - "DISABLE_SECURITY_DASHBOARDS_PLUGIN=true"
    volumes:
      - opensearch_dashboards_data:/usr/share/opensearch-dashboards/data
    depends_on:
      - opensearch
    networks:
      - opensearch_net
      - traefik_default
    labels:
      - "traefik.enable=true"
      # LAN-only dashboard access (infrastructure service)
      - "traefik.http.routers.dashboards.rule=Host(`logs-local.ops.markcheli.com`)"
      - "traefik.http.routers.dashboards.entrypoints=websecure"
      - "traefik.http.routers.dashboards.tls=true"
      - "traefik.http.routers.dashboards.tls=true"
      - "traefik.http.routers.dashboards.middlewares=lan-only@docker"
      - "traefik.http.services.dashboards.loadbalancer.server.port=5601"

  logstash:
    image: opensearchproject/logstash-oss-with-opensearch-output-plugin:8.9.0
    container_name: logstash
    restart: unless-stopped
    environment:
      - "LS_JAVA_OPTS=-Xmx1g -Xms1g"
    volumes:
      - logstash_config:/usr/share/logstash/pipeline/
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    depends_on:
      - opensearch
      - logstash-config
    networks:
      - opensearch_net
      - traefik_default

  logstash-config:
    image: busybox
    container_name: logstash-config
    volumes:
      - logstash_config:/config
    command: |
      sh -c "
      cat > /config/logstash.conf << 'EOF'
      input {
        beats {
          port => 5044
        }
        syslog {
          port => 5514
          type => \"docker\"
        }
      }

      filter {
        if [container] {
          mutate {
            add_field => { \"service\" => \"%{[container][name]}\" }
            add_field => { \"image\" => \"%{[container][image][name]}\" }
          }
        }

        if [message] =~ /^\d{4}-\d{2}-\d{2}/ {
          grok {
            match => { \"message\" => \"%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:level} %{GREEDYDATA:log_message}\" }
          }
        }

        mutate {
          add_field => { \"environment\" => \"homelab\" }
          add_field => { \"infrastructure\" => \"83rr-poweredge\" }
          remove_field => [ \"agent\", \"ecs\", \"host\" ]
        }
      }

      output {
        opensearch {
          hosts => [\"opensearch:9200\"]
          index => \"logs-homelab-%{+YYYY.MM.dd}\"
        }
        stdout {
          codec => rubydebug
        }
      }
      EOF
      echo 'Logstash config created'
      sleep 5
      "

  filebeat-config:
    image: busybox
    container_name: filebeat-config
    volumes:
      - filebeat_config:/config
    command: |
      sh -c "
      cat > /config/filebeat.yml << 'EOF'
      filebeat.inputs:
      - type: container
        paths:
          - '/var/lib/docker/containers/*/*.log'
        processors:
          - add_docker_metadata:
              host: \"unix:///var/run/docker.sock\"
          - decode_json_fields:
              fields: [\"message\"]
              target: \"\"
              overwrite_keys: true

      processors:
        - add_host_metadata:
            when.not.contains.tags: forwarded
        - add_labels:
            labels:
              environment: homelab
              infrastructure: 83rr-poweredge

      output.logstash:
        hosts: [\"logstash:5044\"]

      logging.level: info
      logging.to_files: true
      logging.files:
        path: /var/log/filebeat
        name: filebeat
        keepfiles: 7
        permissions: 0644

      monitoring:
        enabled: true
        elasticsearch:
          hosts: [\"opensearch:9200\"]
      EOF
      echo 'Filebeat config created'
      sleep 5
      "

  filebeat:
    image: docker.elastic.co/beats/filebeat:8.9.0
    container_name: filebeat
    restart: unless-stopped
    user: root
    volumes:
      - filebeat_config:/usr/share/filebeat/
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - filebeat_data:/usr/share/filebeat/data
    depends_on:
      - opensearch
      - logstash
      - filebeat-config
    networks:
      - opensearch_net

volumes:
  opensearch_data:
  opensearch_dashboards_data:
  filebeat_data:
  logstash_config:
  filebeat_config:

networks:
  opensearch_net:
    driver: bridge
  traefik_default:
    external: true